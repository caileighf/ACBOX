# default windows
screen -t 'DAQ'     0
screen -t 'cli'     1
screen -t 'sync'    2
screen -t 'debug'   3
screen -t 'GPS'     4
screen -t 'welcome' 5

select 0
stuff "cd $HOME/ACBOX/MCC_DAQ; $HOME/ACBOX/scripts/debug/echo_help.sh --mccdaq | less ^M"
select 1
stuff "cd $HOME/ACBOX/MCC_DAQ/data/; $HOME/ACBOX/scripts/debug/echo_help.sh --cli | less ^M"
select 2
stuff "cd $HOME/ACBOX/MCC_DAQ/data/; $HOME/ACBOX/scripts/debug/echo_help.sh --offload | less ^M"
select 3
stuff "cd $HOME/ACBOX/; $HOME/ACBOX/scripts/debug/echo_help.sh | less ^M"
select 4
stuff "cd $HOME/ACBOX/gps_logger; $HOME/ACBOX/scripts/debug/echo_help.sh --gps | less ^M"
select 5
stuff "cd $HOME/ACBOX/; $HOME/ACBOX/scripts/debug/echo_help.sh --screen | less ^M"

# zombie xy
# Change Escape Combination to Ctrl+f (Ctrl+a is too useful to lose)
#escape ^Ff

# Turn off the welcome message
startup_message off

# Disable visual bell
vbell off

# Set scrollback buffer to 10000
defscrollback 10000
# nonblock on
#
# look and feel for the bottom two lines.
#
# Customize the status line
caption always "%{= Kw}%-w%{+b y}%n %t%{-b Kw}%+w %=%"

# check if GPS has fix once a min # can be computationally expensive to run more frequently
backtick 1 60 5 $HOME/ACBOX/scripts/status/get_loc_status.sh
# check up time once an hour
backtick 2 3600 3600 uptime
# show cpu temp (C-a t)
backtick 3 60 5 $HOME/ACBOX/scripts/status/get_cpu_temp.sh
# show free space (C-a m)
backtick 4 60 5 $HOME/ACBOX/scripts/status/get_free_mem.sh
# show volume (C-a s)
backtick 5 60 5 $HOME/ACBOX/scripts/status/get_volume.sh Headphone
# show daq state (C-a D) every 10 seconds
backtick 6 10 5 $HOME/ACBOX/scripts/status/get_daq_state.sh

# echo minimal location (lat/lon) with google map link
# backtick 3 30 30 $HOME/ACBOX/scripts/status/get_loc.sh

hardstatus alwayslastline
# hardstatus string "%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| DAQ state: %{+b  Y}%6`%{-b  g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]"

# mouse tracking allows to switch region focus by clicking
# mousetrack on

# navigating regions with Ctrl-arrows
# bindkey "^[[1;5D" focus left
# bindkey "^[[1;5C" focus right
# bindkey "^[[1;5A" focus up
# bindkey "^[[1;5B" focus down

#
#  Toggle 'fullscreen' or not.
#
# bind f eval "caption splitonly" "hardstatus ignore"
# bind F eval "caption always"    "hardstatus alwayslastline"
# bind t eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| %3`%{g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""
# bind m eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| free space: %4`%{g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""
# bind s eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| volume: %5`%{g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""
# bind u eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| up since: %2`%{g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""
# bind l eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| cpu load: %l%{g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""
# bind D eval "hardstatus string \"%{= kG}[%{Y}${USER}%{B}@%{G}%H%{g}%? %{B}| DAQ state: %{+b  Y}%6`%{-b  g}][%=%{+b  Y}%1`%{-b g}%=][system time: %{B}%m/%d/%y %{W}%c:%s%{g}]\""

# F2 puts Screen into resize mode. Resize regions using hjkl keys.
# bindkey "^[OQ" eval "command -c rsz" # enter resize mode

# use hjkl keys to resize regions
# bind -c rsz h eval "resize -h -5" "command -c rsz"
# bind -c rsz j eval "resize -v -5" "command -c rsz"
# bind -c rsz k eval "resize -v +5" "command -c rsz"
# bind -c rsz l eval "resize -h +5" "command -c rsz"

# This line makes Detach and Re-attach without losing the regions/windows layout
layout save default
